
%col {
  position: relative;
  width: 100%;
  min-height: 1px; // Prevent columns from collapsing when empty.
  padding-right: ($gutter / 2);
  padding-left: ($gutter / 2);
}

[class|="col"] {
  @extend %col;
}

.gutterless {
  [class|="col"] {
    padding-left: 0;
    padding-right: 0;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  $used: 0%;

  // Walk through denominators.
  @for $d from 1 through $columns {

    // Walk through numerators.
    @for $n from 1 through $d {

      // Calculate the percentage.
      $p: percentage($n / $d);

      // Check if said percentage has been used before.
      // We only want the lowest common denominator, in order to save bytes.
      // (We do not need 10/20 when we have 1/2.)
      @if(index($used, $p) == null) {

        // Put percentage in the list.
        $used: append($used, $p);

        // At last, define the column.
        .col-#{$breakpoint}-#{$n}o#{$d} {
          flex: 0 0 $p;
          max-width: $p;
        }

        // Check if offsets are enabled and the width isn't 100% (offsetting by 100% makes no sense).
        @if($enable-offsets and $p != 100%) {
          // Define offsets (empty columns on the left).
          .offset-#{$breakpoint}-#{$n}o#{$d} {
            margin-left: $p;
          }
        }
      }
    }
  }
}
